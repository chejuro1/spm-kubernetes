{"version":3,"file":"component---src-pages-contributing-mdx-bef5b6924fe584d18e70.js","mappings":"kQAQaA,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,iFACA,sBACE,iBAAOC,WAAW,UAChB,cAAIA,WAAW,UACb,cAAIA,WAAW,KACb,MAAS,UADX,WAGA,cAAIA,WAAW,KACb,MAAS,UADX,aAKJ,iBAAOA,WAAW,UAChB,cAAIA,WAAW,UACb,cAAIA,WAAW,KACb,MAAS,WACR,cAAIA,WAAW,MAAf,UACH,cAAIA,WAAW,KACb,MAAS,WACR,aAAGA,WAAW,KACb,KAAQ,iDACP,eAAKA,WAAW,IACf,IAAO,2DACP,IAAO,uBAKnB,kCACA,2BACA,mBACE,cAAIA,WAAW,OAAK,kBAAQA,WAAW,MAAnB,MAApB,4CACA,cAAIA,WAAW,OAAK,kBAAQA,WAAW,MAAnB,MAApB,iCAA4F,sBAAYA,WAAW,MAAvB,QAA5F,gCACA,cAAIA,WAAW,OAAK,kBAAQA,WAAW,MAAnB,MAApB,uBACA,cAAIA,WAAW,OAAK,kBAAQA,WAAW,MAAnB,MAApB,2DAEF,6BACA,mBACE,cAAIA,WAAW,OAAK,kBAAQA,WAAW,MAAnB,UAApB,2BAA0F,sBAAYA,WAAW,MAAvB,YAA1F,aACA,cAAIA,WAAW,OAAK,kBAAQA,WAAW,MAAnB,UAApB,wBAAuF,sBAAYA,WAAW,MAAvB,QAAvF,QAAgJ,sBAAYA,WAAW,MAAvB,YAAhJ,gBAEF,oCACA,mBACE,cAAIA,WAAW,MAAf,gBACA,cAAIA,WAAW,MAAf,gCAEF,iCACA,mBACE,cAAIA,WAAW,MAAf,8CACE,cAAIA,WAAW,OACb,cAAIA,WAAW,OAAK,sBAAYA,WAAW,MAAvB,8CAGxB,cAAIA,WAAW,OAAK,aAAGA,WAAW,KAC9B,KAAQ,+EADQ,oCAApB,oBAGA,cAAIA,WAAW,OAAK,aAAGA,WAAW,KAC9B,KAAQ,wGADQ,0CAGpB,cAAIA,WAAW,MAAf,UAA8B,aAAGA,WAAW,KACxC,KAAQ,0DADkB,mBAA9B,kHAGA,cAAIA,WAAW,OAAK,aAAGA,WAAW,KAC9B,KAAQ,yCADQ,yBAApB,qDAEuF,aAAGA,WAAW,KACjG,KAAQ,wFAD2E,wBAGvF,cAAIA,WAAW,OAAK,aAAGA,WAAW,KAC9B,KAAQ,uFADQ,mBAApB,cAE0C,aAAGA,WAAW,KACpD,KAAQ,mDAD8B,kBAI5C,gCACA,mBACE,cAAIA,WAAW,MAAf,0EACE,cAAIA,WAAW,OACb,cAAIA,WAAW,MAAf,QAA4B,sBAAYA,WAAW,MAAvB,gBAA5B,SACA,cAAIA,WAAW,MAAf,QAA4B,sBAAYA,WAAW,MAAvB,kBAA5B,kCAAyH,aAAGA,WAAW,KACnI,KAAQ,yBAD6G,WAAzH,4BAKJ,cAAIA,WAAW,MAAf,+CACE,cAAIA,WAAW,OACb,cAAIA,WAAW,MAAf,QAA4B,sBAAYA,WAAW,MAAvB,6BAGhC,cAAIA,WAAW,MAAf,0DAA8E,sBAAYA,WAAW,MAAvB,OAA9E,cACA,cAAIA,WAAW,MAAf,mEAMNJ,EAAWK,gBAAiB,G,uICjH5B,ECGmB,SAAC,GAAD,MAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,IAAiBC,KAAAA,OAAjB,MAAwB,GAAxB,SACjB,uBACEC,UAAWC,GAAAA,CCJS,yCDIP,OCFK,uCDGGF,EAAKG,OADb,ECHK,uCDKa,SAAVJ,EAFR,KAIb,uBAAKE,UAAU,YACb,uBAAKA,UAAU,WACb,uBAAKA,UAAU,iBACb,sBAAIG,GAAG,aAAaH,UCRZ,kCDSLH,QEbb,ECIiB,SAAC,GAAsD,IAApDO,EAAmD,EAAnDA,iBAA8BC,EAAqB,EAAjCC,WAGhBA,GAEhBC,EAAAA,EAAAA,gBAAe,cAHjBC,KACEC,aAAgBH,WAgBpB,EAA0CD,GAAkBC,EAApDI,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAEXC,EAAUF,EAAN,SAFV,EAA+BG,OAEUF,EAA/B,aAAwDP,EAElE,OAAOM,EACL,uBAAKV,UAAS,uCACZ,uBAAKA,UAAU,WACb,qBAAGA,UC7BO,+BD6BUY,KAAMA,GAA1B,8BAKF,M,oBEvBeE,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAkClB,OAlCkBA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACnBC,OAAA,WACE,MAA8BC,KAAKvB,MAA3BI,EAAR,EAAQA,MAAOE,EAAf,EAAeA,KAAMkB,EAArB,EAAqBA,KACfC,EAAaD,EAAKE,MAAM,KAAKC,OAAOC,SAASC,OAAO,GAAG,GAEvDC,EAAWxB,EAAKyB,KAAI,SAACC,GAAS,IAAD,EAC3BC,EAAeC,GAAAA,CAAQF,EAAK,CAAEG,OAAO,EAAMC,QAAQ,IACnDC,EAAWJ,IAAiBR,EAG5Ba,EAAkB,IAAIC,OAAUd,EAAd,aAClBN,EAAOK,EAAKgB,QAAQF,EAAiBL,GAC3C,OACE,sBAAIQ,IAAKT,EAAKzB,UAAWC,GAAAA,EAAE,OCpBT,yCDoB4B6B,EAAnB,GCtBb,sCDuBZ,gBAAC,EAAAK,KAAD,CAAMnC,UCtBE,+BDsBeoC,GAAE,GAAKxB,GAC3Ba,OAMT,OACE,uBAAKzB,UCjCgB,0CDkCnB,uBAAKA,UAAU,YACb,uBAAKA,UAAU,WACb,uBAAKA,UAAU,mCACb,uBAAK,aAAYH,GACf,sBAAIG,UCrCF,gCDqCoBuB,SAOnC,EAlCkBT,CAAiBuB,EAAAA,WEZtC,I,4BCAA,ECEyB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAOpBC,EAAe,IAAIC,KAAKF,GAE9B,OAAOA,EACL,gBAAC,KAAD,CAAKtC,UCVQ,yCDWX,gBAAC,KAAD,KACE,uBAAKA,UCbK,0CDaV,sBACsBuC,EAAaE,mBAAmB,QAZ5C,CACdC,IAAK,UACLC,KAAM,UACNC,MAAO,YAcL,MEyEN,EAjFgB,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAClD,EAA0DH,EAAlDI,YAAAA,OAAR,MAAsB,GAAtB,EAA0B7C,EAAgCyC,EAAhCzC,iBAAkB8C,EAAcL,EAAdK,UAE1CnD,EAMEkD,EANFlD,KACAF,EAKEoD,EALFpD,MACOsD,EAILF,EAJFnD,MACAsD,EAGEH,EAHFG,YACAC,EAEEJ,EAFFI,SACAf,EACEW,EADFX,KAGMgB,GAAkBC,EAAAA,EAAAA,KAAlBD,cAIEE,GACNjD,EAAAA,EAAAA,gBAAe,cADjBC,KAAQgD,WAUJvC,EAAOuC,EACTT,EAASU,SAASxB,QAAQuB,EAAY,IACtCT,EAASU,SAUPvC,EAPCnB,EAEHkB,EAAKE,MAAM,KAAKC,OAAOC,SAASC,OAAO,GAAG,IAC1CK,GAAAA,CAAQ5B,EAAK,GAAI,CAAE6B,OAAO,IAHV,GASd9B,EAAQqD,GAAoBG,EAElC,OACE,gBAACI,EAAA,EAAD,CACE3D,KAAMA,EACN4D,UAAU,EACV7D,MAAOA,EACP8D,UAAW/D,EACXgE,gBAAiBT,EACjBU,aAAcT,EACdH,UAAWA,GACX,gBAAC,EAAD,CACErD,MAAOmD,EAAQ,gBAACA,EAAD,MAAYnD,EAC3BkE,MAAM,QACNhE,KAAMA,EACND,MAAOA,IAERC,GACC,gBAAC,EAAD,CACEF,MAAOA,EACPoB,KAAMA,EACNlB,KAAMA,EACNmB,WAAYA,IAGhB,gBAAC8C,EAAA,EAAD,CAAMC,QAAM,GACTnB,EACD,gBAAC,EAAD,CAAU1C,iBAAkBA,IAC5B,gBAAC,EAAD,CAAkBkC,KAAMA,KAE1B,gBAAC4B,EAAA,EAAD,CACErB,YAAaA,EACbE,SAAUA,EACV9B,KAAMA,EACNlB,KAAMA,EACNmB,WAAYA,IAEd,gBAACiD,EAAA,EAAD","sources":["webpack://spm-kubernetes/./src/pages/contributing.mdx","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/spm-kubernetes/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`This is a guide for contributing to the SPM DevOps runbook.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Branch`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Status`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}><em parentName=\"td\">{`Main`}</em></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"https://app.travis-ci.com/IBM/spm-kubernetes\"\n            }}><img parentName=\"a\" {...{\n                \"src\": \"https://travis-ci.com/IBM/spm-kubernetes.svg?branch=main\",\n                \"alt\": \"Build Status\"\n              }}></img></a></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2>{`House Rules`}</h2>\n    <h3>{`Do’s`}</h3>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do`}</strong>{` your own lint check before committing.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do`}</strong>{` create your branch from the `}<inlineCode parentName=\"li\">{`main`}</inlineCode>{` branch to avoid conflicts.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do`}</strong>{` use good grammar.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do`}</strong>{` provide references to any external source materials.`}</li>\n    </ul>\n    <h3>{`Don’ts`}</h3>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do not`}</strong>{` creates branches from `}<inlineCode parentName=\"li\">{`gh-pages`}</inlineCode>{` branch.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do not`}</strong>{` commit directly to `}<inlineCode parentName=\"li\">{`main`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`gh-pages`}</inlineCode>{` branches.`}</li>\n    </ul>\n    <h2>{`Prerequisites`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`NodeJS 12.x`}</li>\n      <li parentName=\"ul\">{`Markdown-compatible editor`}</li>\n    </ul>\n    <h2>{`Setting up`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Install Gatsby and MarkdownLint CLI tools:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`npm install -g gatsby markdownlint-cli`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://services.github.com/on-demand/github-desktop/install-github-desktop\"\n        }}>{`Install and Setup GitHub Desktop`}</a>{` on your laptop`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://help.github.com/desktop/guides/getting-started-with-github-desktop/authenticating-to-github/\"\n        }}>{`Sign into GitHub from GitHub Desktop`}</a></li>\n      <li parentName=\"ul\">{`Learn `}<a parentName=\"li\" {...{\n          \"href\": \"https://guides.github.com/features/mastering-markdown/\"\n        }}>{`Markdown Syntax`}</a>{` and notice the formatting standards in the existing docs for examples of how we want you to construct a page`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/IBM/spm-kubernetes\"\n        }}>{`Clone this repository`}</a>{` to your local workstation from the GitHub UI or `}<a parentName=\"li\" {...{\n          \"href\": \"https://services.github.com/on-demand/github-desktop/clone-repository-github-desktop\"\n        }}>{`use GitHub Desktop`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://services.github.com/on-demand/github-desktop/create-branches-github-desktop\"\n        }}>{`Create a branch`}</a>{` from the `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/IBM/spm-kubernetes/tree/main\"\n        }}>{`main branch`}</a></li>\n    </ul>\n    <h2>{`Authoring`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Make the changes locally, and build the static content for previewing:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`run `}<inlineCode parentName=\"li\">{`gatsby build`}</inlineCode>{` OR,`}</li>\n          <li parentName=\"ul\">{`run `}<inlineCode parentName=\"li\">{`gatsby develop`}</inlineCode>{` to view your changes in your `}<a parentName=\"li\" {...{\n              \"href\": \"http://localhost:8000\"\n            }}>{`browser`}</a>{` as soon as you save.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Check your code and validate the formatting`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`run `}<inlineCode parentName=\"li\">{`markdownlint **/*.mdx`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Add and push local commits with GitHub Desktop or the `}<inlineCode parentName=\"li\">{`git`}</inlineCode>{` command.`}</li>\n      <li parentName=\"ul\">{`Open a Pull Request when you are ready to merge your changes.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--379mx\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--2QE1Z\";\nexport var pageHeader = \"PageHeader-module--page-header--1JmOE\";\nexport var darkMode = \"PageHeader-module--dark-mode--aV7If\";\nexport var withTabs = \"PageHeader-module--with-tabs--ezlJE\";\nexport var text = \"PageHeader-module--text--J1--B\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--27F-D\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--2eTgE\";\nexport var link = \"EditLink-module--link--t_pLX\";\nexport var row = \"EditLink-module--row--2vJiZ\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--36NdM\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--3IxF7\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--18QsR\";\nexport var list = \"PageTabs-module--list--3gLeN\";\nexport var listItem = \"PageTabs-module--list-item--2X02I\";\nexport var link = \"PageTabs-module--link--2anNu\";\nexport var selectedItem = \"PageTabs-module--selected-item--3CjGa\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--3sLO2\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--3gAON\";\nexport var text = \"last-modified-date-module--text--1RmBx\";\nexport var row = \"last-modified-date-module--row--Bb0E9\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","title","theme","tabs","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils"],"sourceRoot":""}