{"version":3,"file":"component---src-pages-build-images-setup-docker-context-mdx-ed31263d445a4d3540a6.js","mappings":"yMAUsBA,E,yDAFTC,EAAe,GAOtBC,GALgBF,EAKmB,qBALX,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,cAASG,KAIZG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,QAACI,EAAD,iBAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,gIAAkH,aAAGC,WAAW,IAC5H,KAAQ,+DADsG,gBAAlH,0BAGA,oEACA,mBACE,cAAIA,WAAW,MAAf,mFAAuG,aAAGA,WAAW,KACjH,KAAQ,8BAD2F,eAAvG,MAGA,cAAIA,WAAW,MAAf,QAA4B,sBAAYA,WAAW,MAAvB,eAA5B,SAA6F,sBAAYA,WAAW,MAAvB,qBAA7F,6BAAwL,aAAGA,WAAW,KAClM,KAAQ,wCAD4K,gCAAxL,OAIF,8EACA,0EAA4D,sBAAYA,WAAW,KAAvB,eAA5D,SAA4H,sBAAYA,WAAW,KAAvB,qBAA5H,6BAAsN,aAAGA,WAAW,IAChO,KAAQ,wCAD0M,gCAAtN,MAGA,kCAAoB,sBAAYA,WAAW,KAAvB,eAApB,SAAoF,sBAAYA,WAAW,KAAvB,qBAApF,6NAC2D,sBAAYA,WAAW,KAAvB,SAD3D,MAEA,oDACA,qEAAuD,sBAAYA,WAAW,KAAvB,eAAvD,WACA,sDAAwC,sBAAYA,WAAW,KAAvB,aAAxC,gCAA6H,aAAGA,WAAW,IACvI,KAAQ,8BADiH,eAA7H,MAGA,mBACE,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAd,gBAAmC,sBAAYA,WAAW,KAAvB,iBAAnC,uCAAmI,sBAAYA,WAAW,KAAvB,eAAnI,iCACA,eAAKA,WAAW,OAAK,gBAAMA,WAAW,MAClC,UAAa,kBADI,kEAKvB,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAd,eAAkC,sBAAYA,WAAW,KAAvB,eAAlC,cAAuG,sBAAYA,WAAW,KAAvB,iBAAvG,yCACA,eAAKA,WAAW,OAAK,gBAAMA,WAAW,MAClC,UAAa,kBADI,yJAKrB,aAAGA,WAAW,MAAd,UAA6B,sBAAYA,WAAW,KAAvB,oBAA7B,oCAA6H,sBAAYA,WAAW,KAAvB,eAA7H,iBAGJ,+CACA,kBAAG,sBAAYA,WAAW,KAAvB,wBAAH,SAA4E,sBAAYA,WAAW,KAAvB,wBAA5E,uFACiC,sBAAYA,WAAW,KAAvB,wBADjC,+KAEA,iEAAmD,sBAAYA,WAAW,KAAvB,wBAAnD,SAA4H,sBAAYA,WAAW,KAAvB,qBAA5H,SAAkM,sBAAYA,WAAW,KAAvB,qBAAlM,iLAEA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,kBADZ,oFAKL,6EACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,kBADZ,uGAKL,6DACA,wGAA0F,aAAGA,WAAW,IACpG,KAAQ,6CAD8E,yBAA1F,iCAGA,uDACA,6CAA+B,sBAAYA,WAAW,KAAvB,QAA/B,gEACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,kBADZ,uEAIL,oDACA,oCAAsB,sBAAYA,WAAW,KAAvB,eAAtB,SAAsF,sBAAYA,WAAW,KAAvB,qBAAtF,oDACA,qEACA,0BAAY,sBAAYA,WAAW,KAAvB,6BAAZ,QAAyF,sBAAYA,WAAW,KAAvB,yCAAzF,mFACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,kBADZ,6HAKL,uCACA,kBAAG,sBAAYA,WAAW,KAAvB,oBAAH,4IACF,sBAAYA,WAAW,KAAvB,uBADE,aAEA,mBACE,cAAIA,WAAW,OAAK,sBAAYA,WAAW,MAAvB,wCACpB,cAAIA,WAAW,OAAK,sBAAYA,WAAW,MAAvB,8CAEtB,kCAAoB,sBAAYA,WAAW,KAAvB,eAApB,8GAAyL,sBAAYA,WAAW,KAAvB,eAAzL,gBACA,+BAAiB,sBAAYA,WAAW,KAAvB,oBAAjB,aAA0F,sBAAYA,WAAW,KAAvB,6DAA1F,MACA,QAACV,EAAD,CAAoBS,QAAQ,uBAC1B,iLACA,sBAAYC,WAAW,KAAvB,qBADA,iBAC8E,aAAGA,WAAW,IACxF,KAAQ,8CADkE,cAD9E,0BAKF,mFAAqE,sBAAYA,WAAW,KAAvB,oBAArE,4BACc,sBAAYA,WAAW,KAAvB,aADd,2CAC8G,sBAAYA,WAAW,KAAvB,cAD9G,mJAG+D,sBAAYA,WAAW,KAAvB,aAH/D,YAIA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,kBADZ,+HAKL,oBAAK,gBAAMA,WAAW,MAClB,UAAa,kBADZ,oeAaL,yEACA,qGAAuF,sBAAYA,WAAW,KAAvB,kBAAvF,SAA0J,sBAAYA,WAAW,KAAvB,kBAA1J,uCAC8B,sBAAYA,WAAW,KAAvB,sDAD9B,kEAEA,iFAAmE,sBAAYA,WAAW,KAAvB,mBAAnE,qCAAmK,sBAAYA,WAAW,KAAvB,yCAAnK,mCACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,kBADZ,sFAKL,iGACA,kBAAG,sBAAYA,WAAW,KAAvB,2DACH,0DACA,QAACV,EAAD,CAAoBS,QAAQ,uBAC1B,kBAAG,kBAAQC,WAAW,KAAnB,SAAH,uGACA,sBAFF,qZAOA,+HACA,mBACE,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAd,2DACA,cAAIA,WAAW,OACb,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAd,qBAAwC,aAAGA,WAAW,IAClD,KAAQ,2BAD4B,8BAI1C,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAd,gHACA,eAAKA,WAAW,OAAK,gBAAMA,WAAW,OAAjB,kJAIvB,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAd,kFAIN,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAd,+BAAkD,sBAAYA,WAAW,KAAvB,qCAAlD,UAAyI,sBAAYA,WAAW,KAAvB,0CAAzI,QAORH,EAAWI,gBAAiB,G,uIC1L5B,ECGmB,SAAC,GAAD,MAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,IAAiBC,KAAAA,OAAjB,MAAwB,GAAxB,SACjB,uBACEC,UAAWC,GAAAA,CCJS,yCDIP,OCFK,uCDGGF,EAAKG,OADb,ECHK,uCDKa,SAAVJ,EAFR,KAIb,uBAAKE,UAAU,YACb,uBAAKA,UAAU,WACb,uBAAKA,UAAU,iBACb,sBAAIG,GAAG,aAAaH,UCRZ,kCDSLH,QEbb,ECIiB,SAAC,GAAsD,IAApDO,EAAmD,EAAnDA,iBAA8BC,EAAqB,EAAjCC,WAGhBA,GAEhBC,EAAAA,EAAAA,gBAAe,cAHjBC,KACEC,aAAgBH,WAgBpB,EAA0CD,GAAkBC,EAApDI,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAEXC,EAAUF,EAAN,SAFV,EAA+BG,OAEUF,EAA/B,aAAwDP,EAElE,OAAOM,EACL,uBAAKV,UAAS,uCACZ,uBAAKA,UAAU,WACb,qBAAGA,UC7BO,+BD6BUY,KAAMA,GAA1B,8BAKF,M,oBEvBeE,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAkClB,OAlCkBA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACnBC,OAAA,WACE,MAA8BC,KAAK9B,MAA3BW,EAAR,EAAQA,MAAOE,EAAf,EAAeA,KAAMkB,EAArB,EAAqBA,KACfC,EAAaD,EAAKE,MAAM,KAAKC,OAAOC,SAASC,OAAO,GAAG,GAEvDC,EAAWxB,EAAKyB,KAAI,SAACC,GAAS,IAAD,EAC3BC,EAAeC,GAAAA,CAAQF,EAAK,CAAEG,OAAO,EAAMC,QAAQ,IACnDC,EAAWJ,IAAiBR,EAG5Ba,EAAkB,IAAIC,OAAUd,EAAd,aAClBN,EAAOK,EAAKgB,QAAQF,EAAiBL,GAC3C,OACE,sBAAIQ,IAAKT,EAAKzB,UAAWC,GAAAA,EAAE,OCpBT,yCDoB4B6B,EAAnB,GCtBb,sCDuBZ,gBAAC,EAAAK,KAAD,CAAMnC,UCtBE,+BDsBeoC,GAAE,GAAKxB,GAC3Ba,OAMT,OACE,uBAAKzB,UCjCgB,0CDkCnB,uBAAKA,UAAU,YACb,uBAAKA,UAAU,WACb,uBAAKA,UAAU,mCACb,uBAAK,aAAYH,GACf,sBAAIG,UCrCF,gCDqCoBuB,SAOnC,EAlCkBT,CAAiBuB,EAAAA,WEZtC,I,4BCAA,ECEyB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAOpBC,EAAe,IAAIC,KAAKF,GAE9B,OAAOA,EACL,gBAAC,KAAD,CAAKtC,UCVQ,yCDWX,gBAAC,KAAD,KACE,uBAAKA,UCbK,0CDaV,sBACsBuC,EAAaE,mBAAmB,QAZ5C,CACdC,IAAK,UACLC,KAAM,UACNC,MAAO,YAcL,MEyEN,EAjFgB,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAClD,EAA0DH,EAAlDI,YAAAA,OAAR,MAAsB,GAAtB,EAA0B7C,EAAgCyC,EAAhCzC,iBAAkB8C,EAAcL,EAAdK,UAE1CnD,EAMEkD,EANFlD,KACAF,EAKEoD,EALFpD,MACOsD,EAILF,EAJFnD,MACAsD,EAGEH,EAHFG,YACAC,EAEEJ,EAFFI,SACAf,EACEW,EADFX,KAGMgB,GAAkBC,EAAAA,EAAAA,KAAlBD,cAIEE,GACNjD,EAAAA,EAAAA,gBAAe,cADjBC,KAAQgD,WAUJvC,EAAOuC,EACTT,EAASU,SAASxB,QAAQuB,EAAY,IACtCT,EAASU,SAUPvC,EAPCnB,EAEHkB,EAAKE,MAAM,KAAKC,OAAOC,SAASC,OAAO,GAAG,IAC1CK,GAAAA,CAAQ5B,EAAK,GAAI,CAAE6B,OAAO,IAHV,GASd9B,EAAQqD,GAAoBG,EAElC,OACE,gBAACI,EAAA,EAAD,CACE3D,KAAMA,EACN4D,UAAU,EACV7D,MAAOA,EACP8D,UAAW/D,EACXgE,gBAAiBT,EACjBU,aAAcT,EACdH,UAAWA,GACX,gBAAC,EAAD,CACErD,MAAOmD,EAAQ,gBAACA,EAAD,MAAYnD,EAC3BkE,MAAM,QACNhE,KAAMA,EACND,MAAOA,IAERC,GACC,gBAAC,EAAD,CACEF,MAAOA,EACPoB,KAAMA,EACNlB,KAAMA,EACNmB,WAAYA,IAGhB,gBAAC8C,EAAA,EAAD,CAAMC,QAAM,GACTnB,EACD,gBAAC,EAAD,CAAU1C,iBAAkBA,IAC5B,gBAAC,EAAD,CAAkBkC,KAAMA,KAE1B,gBAAC4B,EAAA,EAAD,CACErB,YAAaA,EACbE,SAAUA,EACV9B,KAAMA,EACNlB,KAAMA,EACNmB,WAAYA,IAEd,gBAACiD,EAAA,EAAD","sources":["webpack://spm-kubernetes/./src/pages/build-images/setup_docker_context.mdx","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/spm-kubernetes/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`To build the required Docker images, the context for building them must be established as described in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.docker.com/engine/reference/commandline/build/\"\n      }}>{`Docker build`}</a>{` command description.`}</p>\n    <p>{`The following components provide this context:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The artifacts that you downloaded by following the steps that are described in `}<a parentName=\"li\" {...{\n          \"href\": \"/spm-kubernetes/prereq/git\"\n        }}>{`GitHub repo`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`release.zip`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`StaticContent.zip`}</inlineCode>{` files that you built in `}<a parentName=\"li\" {...{\n          \"href\": \"/spm-kubernetes/deploy-spm/build-spm\"\n        }}>{`Building the SPM application`}</a>{`.`}</li>\n    </ul>\n    <h2>{`Building IBM® Social Program Management (SPM) resources`}</h2>\n    <p>{`Some of the Docker images that you build rely on the `}<inlineCode parentName=\"p\">{`release.zip`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`StaticContent.zip`}</inlineCode>{` files that you built in `}<a parentName=\"p\" {...{\n        \"href\": \"/spm-kubernetes/deploy-spm/build-spm\"\n      }}>{`Building the SPM application`}</a>{`.`}</p>\n    <p>{`If you built `}<inlineCode parentName=\"p\">{`release.zip`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`StaticContent.zip`}</inlineCode>{` on a different computer to the one where container environment will be deployed, you must transfer the files to the computer you’re currently working on.\nFor simplicity, it is assumed that these files are copied to `}<inlineCode parentName=\"p\">{`/tmp/`}</inlineCode>{`.`}</p>\n    <h2>{`Preparing the SPM environment`}</h2>\n    <p>{`Prepare the SPM Docker environment by using the `}<inlineCode parentName=\"p\">{`release.zip`}</inlineCode>{` file.`}</p>\n    <p>{`For the following steps, use the `}<inlineCode parentName=\"p\">{`$SPM_HOME`}</inlineCode>{` folder that you created in `}<a parentName=\"p\" {...{\n        \"href\": \"/spm-kubernetes/prereq/git\"\n      }}>{`GitHub repo`}</a>{`.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`To create a `}<inlineCode parentName=\"p\">{`release-stage`}</inlineCode>{` folder to contain the contents of `}<inlineCode parentName=\"p\">{`release.zip`}</inlineCode>{`, run the following command:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`mkdir $SPM_HOME/dockerfiles/Liberty/content/release-stage\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`To extract `}<inlineCode parentName=\"p\">{`release.zip`}</inlineCode>{` into the `}<inlineCode parentName=\"p\">{`release-stage`}</inlineCode>{` folder, run the following commands:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`unzip -qd $SPM_HOME/dockerfiles/Liberty/content/release-stage /tmp/release.zip\nchmod +x $SPM_HOME/dockerfiles/Liberty/content/release-stage/*.sh\n`}</code></pre>\n        <p parentName=\"li\">{`Where `}<inlineCode parentName=\"p\">{`/tmp/release.zip`}</inlineCode>{` is the absolute path where the `}<inlineCode parentName=\"p\">{`release.zip`}</inlineCode>{` is saved.`}</p>\n      </li>\n    </ol>\n    <h2>{`Modifying SPM properties`}</h2>\n    <p><inlineCode parentName=\"p\">{`Bootstrap.properties`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`AppServer.properties`}</inlineCode>{` are required to configure WebSphere® Liberty.\nHowever the relevant properties in `}<inlineCode parentName=\"p\">{`Bootstrap.properties`}</inlineCode>{` that you modify in the on-premise implementation of SPM are no longer relevant because Kubernetes configmaps provide the necessary values for the database configuration.`}</p>\n    <p>{`The only properties that you must modify in `}<inlineCode parentName=\"p\">{`AppServer.properties`}</inlineCode>{` are `}<inlineCode parentName=\"p\">{`security.username`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`security.password`}</inlineCode>{`.\nThese properties contain the WebSphere Liberty administrator credentials. If the password is changed, the value must be the encrypted  by running the following commands:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`cd $SERVER_DIR\n./build.sh encrypt -Dpassword=<The password to be encrypted>\n`}</code></pre>\n    <p>{`Copy the property files by using the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`cd $SPM_HOME/dockerfiles/Liberty/content\ncp -vf *.properties release-stage/project/properties/\n`}</code></pre>\n    <h2>{`WebSphere Liberty server configuration`}</h2>\n    <p>{`All configuration of WebSphere Liberty will be handled by the Helm Charts. See the `}<a parentName=\"p\" {...{\n        \"href\": \"/spm-kubernetes/deployment/hc_preparation\"\n      }}>{`Preparing Helm Charts`}</a>{` topic for more information.`}</p>\n    <h2>{`Copying static content artifacts`}</h2>\n    <p>{`Copy the static content `}<inlineCode parentName=\"p\">{`.zip`}</inlineCode>{` file for Docker image creation. Run the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`cp -vf /tmp/StaticContent.zip $SPM_HOME/dockerfiles/HTTPServer/\n`}</code></pre>\n    <h2>{`Installing external artifacts`}</h2>\n    <p>{`In addition to `}<inlineCode parentName=\"p\">{`release.zip`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`StaticContent.zip`}</inlineCode>{`, download and install the following artifacts.`}</p>\n    <h3>{`Add the Ant zip file to the Docker environment`}</h3>\n    <p>{`Copy `}<inlineCode parentName=\"p\">{`apache-ant-1.10.6-bin.zip`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`$SPM_HOME/dockerfiles/Liberty/content`}</inlineCode>{`. If Ant is not already available on the computer, run the following commands:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`cd $SPM_HOME/dockerfiles/Liberty/content\nwget https://archive.apache.org/dist/ant/binaries/apache-ant-1.10.6-bin.zip\n`}</code></pre>\n    <h3>{`CryptoConfig.jar`}</h3>\n    <p><inlineCode parentName=\"p\">{`CryptoConfig.jar`}</inlineCode>{` is required for SPM cryptography to function correctly. This jar is automatically created in the following locations when you run the\n`}<inlineCode parentName=\"p\">{`build.sh configtest`}</inlineCode>{` target:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`$SERVER_DIR/build/CryptoConfig.jar`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`$JAVA_HOME/jre/lib/ext/CryptoConfig.jar`}</inlineCode></li>\n    </ul>\n    <p>{`However, the `}<inlineCode parentName=\"p\">{`release.zip`}</inlineCode>{` does not include this jar file, so the jar file must be copied separately from the environment where the `}<inlineCode parentName=\"p\">{`release.zip`}</inlineCode>{` was built.`}</p>\n    <p>{`Place the `}<inlineCode parentName=\"p\">{`CryptoConfig.jar`}</inlineCode>{` file in `}<inlineCode parentName=\"p\">{`$SPM_HOME/dockerfiles/Liberty/content/release-stage/build`}</inlineCode>{`.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`Cryptography keystores for SPM vary based on the JVM vendor, so the vendor in the build environment must correspond to that used in the Docker images.\nThe `}<inlineCode parentName=\"p\">{`websphere-liberty`}</inlineCode>{` images from `}<a parentName=\"p\" {...{\n          \"href\": \"https://hub.docker.com/_/websphere-liberty\"\n        }}>{`Docker Hub`}</a>{` use IBM Java SDK 8.`}</p>\n    </InlineNotification>\n    <p>{`For convenience, you can use a docker container to create the `}<inlineCode parentName=\"p\">{`CryptoConfig.jar`}</inlineCode>{` file.\nNote the use of `}<inlineCode parentName=\"p\">{`$ANT_HOME`}</inlineCode>{` environment variable in the following `}<inlineCode parentName=\"p\">{`docker run`}</inlineCode>{` command.\nThis value must map to a working copy of Ant on your workstation.\nIf you do not have a copy of Ant locally you can extract it from `}<inlineCode parentName=\"p\">{`$SPM_HOME`}</inlineCode>{` using:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`unzip -qd /tmp/ $SPM_HOME/dockerfiles/Liberty/content/apache-ant-1.10.6-bin.zip\nexport ANT_HOME=/tmp/apache-ant-1.10.6\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`docker run --rm \\\\\n    -v $ANT_HOME:/tmp/ant \\\\\n    -v $SPM_HOME/dockerfiles/Liberty/content/release-stage:/work/dir \\\\\n    -v $SPM_HOME/dockerfiles/Liberty/content/release-stage/SetEnvironment.sh:/work/SetEnvironment.sh \\\\\n    -w /work/dir \\\\\n    -u root \\\\\n    -e ANT_HOME=/tmp/ant \\\\\n    -e WLP_HOME=/opt/ibm/wlp \\\\\n    ibmcom/websphere-liberty:21.0.0.9-full-java8-ibmjava-ubi \\\\\n    bash -c 'export PATH=$ANT_HOME/bin:$PATH:.; build.sh internal.update.crypto.jar'\n`}</code></pre>\n    <h3>{`Installing javax.mail.jar and activation.jar files`}</h3>\n    <p>{`Java Mail is an external dependency for SPM and is represented by the JAR files `}<inlineCode parentName=\"p\">{`activation.jar`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`javax.mail.jar`}</inlineCode>{`.\nPlace these files in the folder `}<inlineCode parentName=\"p\">{`$SPM_HOME/dockerfiles/Liberty/content/dependencies`}</inlineCode>{` (filenames must be exact, that is, have no version numbers).`}</p>\n    <p>{`If you do not have the jar files available, you can use the `}<inlineCode parentName=\"p\">{`getJavaMail.xml`}</inlineCode>{` Ant file that is located in the `}<inlineCode parentName=\"p\">{`$SPM_HOME/dockerfiles/Liberty/content`}</inlineCode>{` folder to download the files:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`cd $SPM_HOME/dockerfiles/Liberty/content\n$ANT_HOME/bin/ant -f getJavaMail.xml\n`}</code></pre>\n    <p>{`Confirm the availability of the JAR files by running the following command:`}</p>\n    <p><inlineCode parentName=\"p\">{`ls $SPM_HOME/dockerfiles/Liberty/content/dependencies`}</inlineCode></p>\n    <h3>{`Downloading IBM MQ Resource Adapter`}</h3>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` As of Release 21.7.0, the IBM MQ Resource Adapter version used to verify this runbook is 9.2.2.0.`}</p>\n      <p>&nbsp;</p>\nAn IBM MQ Resources Adapter of a supported version level can connect to any IBM MQ Queue Manager of supported version level,\nbut the feature set available will be based on whichever is of the lower level.\nFor more information, see the [related version compatibility documentation](https://www.ibm.com/docs/en/ibm-mq/9.2?topic=cci-compatibility-between-different-versions-mq-mqi-client-queue-manager).\n    </InlineNotification>\n    <p>{`IBM MQ is required for WebSphere Liberty JMS support, therefore you must install the MQ Resource Adapter.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Download the IBM MQ resource adapter from Fix Central.`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Click this link: `}<a parentName=\"p\" {...{\n                \"href\": \"https://ibm.biz/mq92JRA\"\n              }}>{`IBM MQ Resource Adapter`}</a></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Find the resource adapter for your version of IBM MQ in the displayed list of available fixes. For example:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`release level: 9.2.2.0-IBM-MQ-Java-InstallRA\nContinuous Delivery Release: 9.2.2 IBM MQ Resource Adapter for use with Application Servers\n`}</code></pre>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Then click the resource adapter file name and follow the download process.`}</p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Copy the downloaded file ( `}<inlineCode parentName=\"p\">{`V.R.M.F-IBM-MQ-Java-InstallRA.jar`}</inlineCode>{` ) to `}<inlineCode parentName=\"p\">{`$SPM_HOME/dockerfiles/Liberty/content/`}</inlineCode>{`.`}</p>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--379mx\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--2QE1Z\";\nexport var pageHeader = \"PageHeader-module--page-header--1JmOE\";\nexport var darkMode = \"PageHeader-module--dark-mode--aV7If\";\nexport var withTabs = \"PageHeader-module--with-tabs--ezlJE\";\nexport var text = \"PageHeader-module--text--J1--B\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--27F-D\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--2eTgE\";\nexport var link = \"EditLink-module--link--t_pLX\";\nexport var row = \"EditLink-module--row--2vJiZ\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--36NdM\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--3IxF7\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--18QsR\";\nexport var list = \"PageTabs-module--list--3gLeN\";\nexport var listItem = \"PageTabs-module--list-item--2X02I\";\nexport var link = \"PageTabs-module--link--2anNu\";\nexport var selectedItem = \"PageTabs-module--selected-item--3CjGa\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--3sLO2\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--3gAON\";\nexport var text = \"last-modified-date-module--text--1RmBx\";\nexport var row = \"last-modified-date-module--row--Bb0E9\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"names":["name","_frontmatter","InlineNotification","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent","title","theme","tabs","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils"],"sourceRoot":""}