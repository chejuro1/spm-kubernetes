"use strict";(self.webpackChunkspm_kubernetes=self.webpackChunkspm_kubernetes||[]).push([[1291],{7246:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return p},default:function(){return c}});var a,r=n(1531),i=(n(7294),n(4983)),l=n(4295),o=["components"],p={},s=(a="InlineNotification",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)}),m={_frontmatter:p},d=l.Z;function c(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)(d,Object.assign({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"To build the required Docker images, the context for building them must be established as described in the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/reference/commandline/build/"},"Docker build")," command description."),(0,i.kt)("p",null,"The following components provide this context:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The artifacts that you downloaded by following the steps that are described in ",(0,i.kt)("a",{parentName:"li",href:"/spm-kubernetes/prereq/git"},"GitHub repo"),"."),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"release.zip")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"StaticContent.zip")," files that you built in ",(0,i.kt)("a",{parentName:"li",href:"/spm-kubernetes/deploy-spm/build-spm"},"Building the SPM application"),".")),(0,i.kt)("h2",null,"Building IBM® Social Program Management (SPM) resources"),(0,i.kt)("p",null,"Some of the Docker images that you build rely on the ",(0,i.kt)("inlineCode",{parentName:"p"},"release.zip")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"StaticContent.zip")," files that you built in ",(0,i.kt)("a",{parentName:"p",href:"/spm-kubernetes/deploy-spm/build-spm"},"Building the SPM application"),"."),(0,i.kt)("p",null,"If you built ",(0,i.kt)("inlineCode",{parentName:"p"},"release.zip")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"StaticContent.zip")," on a different computer to the one where container environment will be deployed, you must transfer the files to the computer you’re currently working on.\nFor simplicity, it is assumed that these files are copied to ",(0,i.kt)("inlineCode",{parentName:"p"},"/tmp/"),"."),(0,i.kt)("h2",null,"Preparing the SPM environment"),(0,i.kt)("p",null,"Prepare the SPM Docker environment by using the ",(0,i.kt)("inlineCode",{parentName:"p"},"release.zip")," file."),(0,i.kt)("p",null,"For the following steps, use the ",(0,i.kt)("inlineCode",{parentName:"p"},"$SPM_HOME")," folder that you created in ",(0,i.kt)("a",{parentName:"p",href:"/spm-kubernetes/prereq/git"},"GitHub repo"),"."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"To create a ",(0,i.kt)("inlineCode",{parentName:"p"},"release-stage")," folder to contain the contents of ",(0,i.kt)("inlineCode",{parentName:"p"},"release.zip"),", run the following command:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir $SPM_HOME/dockerfiles/Liberty/content/release-stage\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"To extract ",(0,i.kt)("inlineCode",{parentName:"p"},"release.zip")," into the ",(0,i.kt)("inlineCode",{parentName:"p"},"release-stage")," folder, run the following commands:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"unzip -qd $SPM_HOME/dockerfiles/Liberty/content/release-stage /tmp/release.zip\nchmod +x $SPM_HOME/dockerfiles/Liberty/content/release-stage/*.sh\n")),(0,i.kt)("p",{parentName:"li"},"Where ",(0,i.kt)("inlineCode",{parentName:"p"},"/tmp/release.zip")," is the absolute path where the ",(0,i.kt)("inlineCode",{parentName:"p"},"release.zip")," is saved."))),(0,i.kt)("h2",null,"Modifying SPM properties"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Bootstrap.properties")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"AppServer.properties")," are required to configure WebSphere® Liberty.\nHowever the relevant properties in ",(0,i.kt)("inlineCode",{parentName:"p"},"Bootstrap.properties")," that you modify in the on-premise implementation of SPM are no longer relevant because Kubernetes configmaps provide the necessary values for the database configuration."),(0,i.kt)("p",null,"The only properties that you must modify in ",(0,i.kt)("inlineCode",{parentName:"p"},"AppServer.properties")," are ",(0,i.kt)("inlineCode",{parentName:"p"},"security.username")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"security.password"),".\nThese properties contain the WebSphere Liberty administrator credentials. If the password is changed, the value must be the encrypted  by running the following commands:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"cd $SERVER_DIR\n./build.sh encrypt -Dpassword=<The password to be encrypted>\n")),(0,i.kt)("p",null,"Copy the property files by using the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"cd $SPM_HOME/dockerfiles/Liberty/content\ncp -vf *.properties release-stage/project/properties/\n")),(0,i.kt)("h2",null,"WebSphere Liberty server configuration"),(0,i.kt)("p",null,"All configuration of WebSphere Liberty will be handled by the Helm Charts. See the ",(0,i.kt)("a",{parentName:"p",href:"/spm-kubernetes/deployment/hc_preparation"},"Preparing Helm Charts")," topic for more information."),(0,i.kt)("h2",null,"Copying static content artifacts"),(0,i.kt)("p",null,"Copy the static content ",(0,i.kt)("inlineCode",{parentName:"p"},".zip")," file for Docker image creation. Run the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"cp -vf /tmp/StaticContent.zip $SPM_HOME/dockerfiles/HTTPServer/\n")),(0,i.kt)("h2",null,"Installing external artifacts"),(0,i.kt)("p",null,"In addition to ",(0,i.kt)("inlineCode",{parentName:"p"},"release.zip")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"StaticContent.zip"),", download and install the following artifacts."),(0,i.kt)("h3",null,"Add the Ant zip file to the Docker environment"),(0,i.kt)("p",null,"Copy ",(0,i.kt)("inlineCode",{parentName:"p"},"apache-ant-1.10.6-bin.zip")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"$SPM_HOME/dockerfiles/Liberty/content"),". If Ant is not already available on the computer, run the following commands:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"cd $SPM_HOME/dockerfiles/Liberty/content\nwget https://archive.apache.org/dist/ant/binaries/apache-ant-1.10.6-bin.zip\n")),(0,i.kt)("h3",null,"CryptoConfig.jar"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"CryptoConfig.jar")," is required for SPM cryptography to function correctly. This jar is automatically created in the following locations when you run the\n",(0,i.kt)("inlineCode",{parentName:"p"},"build.sh configtest")," target:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$SERVER_DIR/build/CryptoConfig.jar")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$JAVA_HOME/jre/lib/ext/CryptoConfig.jar"))),(0,i.kt)("p",null,"However, the ",(0,i.kt)("inlineCode",{parentName:"p"},"release.zip")," does not include this jar file, so the jar file must be copied separately from the environment where the ",(0,i.kt)("inlineCode",{parentName:"p"},"release.zip")," was built."),(0,i.kt)("p",null,"Place the ",(0,i.kt)("inlineCode",{parentName:"p"},"CryptoConfig.jar")," file in ",(0,i.kt)("inlineCode",{parentName:"p"},"$SPM_HOME/dockerfiles/Liberty/content/release-stage/build"),"."),(0,i.kt)(s,{mdxType:"InlineNotification"},(0,i.kt)("p",null,"Cryptography keystores for SPM vary based on the JVM vendor, so the vendor in the build environment must correspond to that used in the Docker images.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"websphere-liberty")," images from ",(0,i.kt)("a",{parentName:"p",href:"https://hub.docker.com/_/websphere-liberty"},"Docker Hub")," use IBM Java SDK 8.")),(0,i.kt)("p",null,"For convenience, you can use a docker container to create the ",(0,i.kt)("inlineCode",{parentName:"p"},"CryptoConfig.jar")," file.\nNote the use of ",(0,i.kt)("inlineCode",{parentName:"p"},"$ANT_HOME")," environment variable in the following ",(0,i.kt)("inlineCode",{parentName:"p"},"docker run")," command.\nThis value must map to a working copy of Ant on your workstation.\nIf you do not have a copy of Ant locally you can extract it from ",(0,i.kt)("inlineCode",{parentName:"p"},"$SPM_HOME")," using:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"unzip -qd /tmp/ $SPM_HOME/dockerfiles/Liberty/content/apache-ant-1.10.6-bin.zip\nexport ANT_HOME=/tmp/apache-ant-1.10.6\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"docker run --rm \\\n    -v $ANT_HOME:/tmp/ant \\\n    -v $SPM_HOME/dockerfiles/Liberty/content/release-stage:/work/dir \\\n    -v $SPM_HOME/dockerfiles/Liberty/content/release-stage/SetEnvironment.sh:/work/SetEnvironment.sh \\\n    -w /work/dir \\\n    -u root \\\n    -e ANT_HOME=/tmp/ant \\\n    -e WLP_HOME=/opt/ibm/wlp \\\n    ibmcom/websphere-liberty:21.0.0.9-full-java8-ibmjava-ubi \\\n    bash -c 'export PATH=$ANT_HOME/bin:$PATH:.; build.sh internal.update.crypto.jar'\n")),(0,i.kt)("h3",null,"Installing javax.mail.jar and activation.jar files"),(0,i.kt)("p",null,"Java Mail is an external dependency for SPM and is represented by the JAR files ",(0,i.kt)("inlineCode",{parentName:"p"},"activation.jar")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"javax.mail.jar"),".\nPlace these files in the folder ",(0,i.kt)("inlineCode",{parentName:"p"},"$SPM_HOME/dockerfiles/Liberty/content/dependencies")," (filenames must be exact, that is, have no version numbers)."),(0,i.kt)("p",null,"If you do not have the jar files available, you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"getJavaMail.xml")," Ant file that is located in the ",(0,i.kt)("inlineCode",{parentName:"p"},"$SPM_HOME/dockerfiles/Liberty/content")," folder to download the files:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"cd $SPM_HOME/dockerfiles/Liberty/content\n$ANT_HOME/bin/ant -f getJavaMail.xml\n")),(0,i.kt)("p",null,"Confirm the availability of the JAR files by running the following command:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ls $SPM_HOME/dockerfiles/Liberty/content/dependencies")),(0,i.kt)("h3",null,"Downloading IBM MQ Resource Adapter"),(0,i.kt)(s,{mdxType:"InlineNotification"},(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note:")," As of Release 21.7.0, the IBM MQ Resource Adapter version used to verify this runbook is 9.2.2.0."),(0,i.kt)("p",null," "),"An IBM MQ Resources Adapter of a supported version level can connect to any IBM MQ Queue Manager of supported version level, but the feature set available will be based on whichever is of the lower level. For more information, see the [related version compatibility documentation](https://www.ibm.com/docs/en/ibm-mq/9.2?topic=cci-compatibility-between-different-versions-mq-mqi-client-queue-manager)."),(0,i.kt)("p",null,"IBM MQ is required for WebSphere Liberty JMS support, therefore you must install the MQ Resource Adapter."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Download the IBM MQ resource adapter from Fix Central."),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Click this link: ",(0,i.kt)("a",{parentName:"p",href:"https://ibm.biz/mq92JRA"},"IBM MQ Resource Adapter"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Find the resource adapter for your version of IBM MQ in the displayed list of available fixes. For example:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"release level: 9.2.2.0-IBM-MQ-Java-InstallRA\nContinuous Delivery Release: 9.2.2 IBM MQ Resource Adapter for use with Application Servers\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Then click the resource adapter file name and follow the download process.")))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Copy the downloaded file ( ",(0,i.kt)("inlineCode",{parentName:"p"},"V.R.M.F-IBM-MQ-Java-InstallRA.jar")," ) to ",(0,i.kt)("inlineCode",{parentName:"p"},"$SPM_HOME/dockerfiles/Liberty/content/"),"."))))}c.isMDXComponent=!0},4295:function(e,t,n){n.d(t,{Z:function(){return v}});var a=n(7294),r=n(8650),i=n.n(r),l=n(5444),o=n(6949),p=n(1551),s=n(5900),m=n.n(s),d=function(e){var t,n=e.title,r=e.theme,i=e.tabs,l=void 0===i?[]:i;return a.createElement("div",{className:m()("PageHeader-module--page-header--1JmOE",(t={},t["PageHeader-module--with-tabs--ezlJE"]=l.length,t["PageHeader-module--dark-mode--aV7If"]="dark"===r,t))},a.createElement("div",{className:"bx--grid"},a.createElement("div",{className:"bx--row"},a.createElement("div",{className:"bx--col-lg-12"},a.createElement("h1",{id:"page-title",className:"PageHeader-module--text--J1--B"},n)))))},c=function(e){var t=e.relativePagePath,n=e.repository,r=(0,l.useStaticQuery)("1364590287").site.siteMetadata.repository,i=n||r,o=i.baseUrl,p=i.subDirectory,s=o+"/edit/"+i.branch+p+"/src/pages"+t;return o?a.createElement("div",{className:"bx--row EditLink-module--row--2vJiZ"},a.createElement("div",{className:"bx--col"},a.createElement("a",{className:"EditLink-module--link--t_pLX",href:s},"Edit this page on GitHub"))):null},u=n(4275),h=n(5750),k=function(e){function t(){return e.apply(this,arguments)||this}return(0,h.Z)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,n=e.tabs,r=e.slug,o=r.split("/").filter(Boolean).slice(-1)[0],p=n.map((function(e){var t,n=i()(e,{lower:!0,strict:!0}),p=n===o,s=new RegExp(o+"/?(#.*)?$"),d=r.replace(s,n);return a.createElement("li",{key:e,className:m()((t={},t["PageTabs-module--selected-item--3CjGa"]=p,t),"PageTabs-module--list-item--2X02I")},a.createElement(l.Link,{className:"PageTabs-module--link--2anNu",to:""+d},e))}));return a.createElement("div",{className:"PageTabs-module--tabs-container--18QsR"},a.createElement("div",{className:"bx--grid"},a.createElement("div",{className:"bx--row"},a.createElement("div",{className:"bx--col-lg-12 bx--col-no-gutter"},a.createElement("nav",{"aria-label":t},a.createElement("ul",{className:"PageTabs-module--list--3gLeN"},p))))))},t}(a.Component),f=k,b=n(2881),g=n(6958),N=n(36),y=function(e){var t=e.date,n=new Date(t);return t?a.createElement(N.X2,{className:"last-modified-date-module--row--Bb0E9"},a.createElement(N.sg,null,a.createElement("div",{className:"last-modified-date-module--text--1RmBx"},"Page last updated: ",n.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null},v=function(e){var t=e.pageContext,n=e.children,r=e.location,s=e.Title,m=t.frontmatter,h=void 0===m?{}:m,k=t.relativePagePath,N=t.titleType,v=h.tabs,M=h.title,C=h.theme,w=h.description,E=h.keywords,P=h.date,S=(0,g.Z)().interiorTheme,H=(0,l.useStaticQuery)("2456312558").site.pathPrefix,x=H?r.pathname.replace(H,""):r.pathname,T=v?x.split("/").filter(Boolean).slice(-1)[0]||i()(v[0],{lower:!0}):"",_=C||S;return a.createElement(p.Z,{tabs:v,homepage:!1,theme:_,pageTitle:M,pageDescription:w,pageKeywords:E,titleType:N},a.createElement(d,{title:s?a.createElement(s,null):M,label:"label",tabs:v,theme:_}),v&&a.createElement(f,{title:M,slug:x,tabs:v,currentTab:T}),a.createElement(b.Z,{padded:!0},n,a.createElement(c,{relativePagePath:k}),a.createElement(y,{date:P})),a.createElement(u.Z,{pageContext:t,location:r,slug:x,tabs:v,currentTab:T}),a.createElement(o.Z,null))}}}]);
//# sourceMappingURL=component---src-pages-build-images-setup-docker-context-mdx-ed31263d445a4d3540a6.js.map