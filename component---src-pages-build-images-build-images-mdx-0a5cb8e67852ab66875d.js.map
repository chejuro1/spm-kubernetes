{"version":3,"file":"component---src-pages-build-images-build-images-mdx-0a5cb8e67852ab66875d.js","mappings":"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","sources":["webpack://spm-kubernetes/./src/pages/build-images/build_images.mdx","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/spm-kubernetes/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst Tabs = makeShortcode(\"Tabs\");\nconst Tab = makeShortcode(\"Tab\");\nconst Row = makeShortcode(\"Row\");\nconst Column = makeShortcode(\"Column\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <InlineNotification mdxType=\"InlineNotification\">\nUniversal Base Image (UBI) consists of enterprise-ready and OCI-compliant Linux containers that offer greater security with stricter defaults than general images.\n      <p>{`For more information, see Red Hat’s `}<a parentName=\"p\" {...{\n          \"href\": \"https://www.redhat.com/en/blog/introducing-red-hat-universal-base-image\"\n        }}>{`Universal Base Image`}</a>{` and `}<a parentName=\"p\" {...{\n          \"href\": \"https://developers.redhat.com/blog/2019/07/29/red-hat-universal-base-image-how-it-works-in-3-minutes-or-less/\"\n        }}>{`Red Hat Universal base image how it works`}</a></p>\n    </InlineNotification>\n    <p>{`Some of the base images require `}<a parentName=\"p\" {...{\n        \"href\": \"https://access.redhat.com/terms-based-registry\"\n      }}>{`authentication`}</a>{` with the RedHat Container Registry.\nYou must be logged in to the following registries:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`registry.redhat.io`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`For accessing `}<inlineCode parentName=\"li\">{`registry.redhat.io/rhel8/httpd-24`}</inlineCode></li>\n          <li parentName=\"ul\">{`Login using `}<inlineCode parentName=\"li\">{`docker login registry.redhat.io`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`registry.connect.redhat.com`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`For accessing `}<inlineCode parentName=\"li\">{`registry.connect.redhat.com/ibm/ibmjava8-sdk-ubi8-minimal`}</inlineCode></li>\n          <li parentName=\"ul\">{`Login using `}<inlineCode parentName=\"li\">{`docker login registry.connect.redhat.com`}</inlineCode></li>\n        </ul>\n      </li>\n    </ul>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` As covered in `}<a parentName=\"p\" {...{\n          \"href\": \"/spm-kubernetes/build-images/base_images\"\n        }}>{`building Base images`}</a>{`, if you do not have an active RedHat subscription you will need to build your own base images from\nsource following the steps there.`}</p>\n      <p>{`Should you opt to build your own base images, the `}<inlineCode parentName=\"p\">{`BASE_REGISTRY`}</inlineCode>{` argument in the following commands may be omitted, if the base images are built in the same environment.`}</p>\n      <p>{`If the images are stored in a private registry, set `}<inlineCode parentName=\"p\">{`BASE_REGISTRY`}</inlineCode>{` to the registry’s hostname.`}</p>\n    </InlineNotification>\n    <p>{`Now that all the elements are in place, build the images as follows:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`We will use a `}<inlineCode parentName=\"p\">{`$DOCKER_REGISTRY`}</inlineCode>{` for the following commands. Please select based on the container environment you are deploying:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`CRC will be `}<inlineCode parentName=\"li\">{`default-route-openshift-image-registry.apps-crc.testing`}</inlineCode>\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`This URL can be retrieved using `}<inlineCode parentName=\"li\">{`oc registry info --public`}</inlineCode></li>\n            </ul>\n          </li>\n          <li parentName=\"ul\">{`Minikube will be `}<inlineCode parentName=\"li\">{`minikube.local:5000`}</inlineCode></li>\n          <li parentName=\"ul\">{`IKS will be `}<inlineCode parentName=\"li\">{`us.icr.io`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`To build the XML server image, run the following commands:`}</p>\n      </li>\n    </ul>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` In the following commands, the value of `}<inlineCode parentName=\"p\">{`$PROJECT`}</inlineCode>{` will change depending on deployment type:`}</p>\n      <ul>\n        <li parentName=\"ul\">{`For a Minikube deployment the value of `}<inlineCode parentName=\"li\">{`$PROJECT`}</inlineCode>{` is arbitrary.`}</li>\n        <li parentName=\"ul\">{`For an IKS deployment the value of `}<inlineCode parentName=\"li\">{`$PROJECT`}</inlineCode>{` must equate to a valid namespace in the customer’s account.`}</li>\n        <li parentName=\"ul\">{`For an OpenShift deployment the value of `}<inlineCode parentName=\"li\">{`$PROJECT`}</inlineCode>{` must equate to a valid project.\nFor this runbook it is best to stick with the value chosen for `}<inlineCode parentName=\"li\">{`$PROJECT`}</inlineCode>{` in `}<a parentName=\"li\" {...{\n            \"href\": \"/spm-kubernetes/prereq/openshift/codeready-containers#creating-a-crc-project\"\n          }}>{`Creating a CRC project`}</a></li>\n      </ul>\n    </InlineNotification>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"Using RedHat Registry\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`cd $SPM_HOME/dockerfiles/Liberty/\ndocker build \\\\\n     --tag $DOCKER_REGISTRY/$PROJECT/xmlserver:latest \\\\\n     --build-arg \"BASE_REGISTRY=registry.connect.redhat.com/\" \\\\\n     --file XMLServer.Dockerfile .\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n      <Tab label=\"Unauthenticated / Local image\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`cd $SPM_HOME/dockerfiles/Liberty/\ndocker build \\\\\n     --tag $DOCKER_REGISTRY/$PROJECT/xmlserver:latest \\\\\n     --file XMLServer.Dockerfile .\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n    </Tabs>\n    <ul>\n      <li parentName=\"ul\">{`To build the utilities image, run the following commands:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`This image is used at various stages of the deployment to check the state of the deployment.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"Using RedHat Registry\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`cd $SPM_HOME/dockerfiles/Liberty/\ndocker build \\\\\n     --tag $DOCKER_REGISTRY/$PROJECT/utilities:latest \\\\\n     --build-arg \"BASE_REGISTRY=registry.connect.redhat.com/\" \\\\\n     --file Utilities.Dockerfile .\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n      <Tab label=\"Unauthenticated / Local image\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`cd $SPM_HOME/dockerfiles/Liberty/\ndocker build \\\\\n     --tag $DOCKER_REGISTRY/$PROJECT/utilities:latest \\\\\n     --file Utilities.Dockerfile .\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n    </Tabs>\n    <ul>\n      <li parentName=\"ul\">{`To build the batch image, run the following commands:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`A `}<inlineCode parentName=\"li\">{`.dockerignore`}</inlineCode>{` file is used to omit the EAR files from the build context for batch`}</li>\n        </ul>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`cd $SPM_HOME/dockerfiles/Liberty/\necho -e 'content/release-stage/ear' > .dockerignore\ndocker build \\\\\n     --tag $DOCKER_REGISTRY/$PROJECT/batch:latest \\\\\n     --file Batch.Dockerfile .\nrm -f .dockerignore\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`To build the Server Code image, run the following commands:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`cd $SPM_HOME/dockerfiles/Liberty/\ndocker build \\\\\n     --tag $DOCKER_REGISTRY/$PROJECT/servercode:latest \\\\\n     --file ServerEAR.Dockerfile \\\\\n     --build-arg \"MQ_RA_LICENSE=--acceptLicense\" .\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`To build the application image, run the following commands for each of the applications (EAR files) needed:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Take note of the `}<inlineCode parentName=\"li\">{`SERVERCODE_IMAGE`}</inlineCode>{` build argument which references the server code image - this gives the images a common base`}</li>\n        </ul>\n      </li>\n    </ul>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"Curam EAR\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`cd $SPM_HOME/dockerfiles/Liberty/\ndocker build \\\\\n     --tag $DOCKER_REGISTRY/$PROJECT/curam:latest \\\\\n     --file ClientEAR.Dockerfile \\\\\n     --build-arg \"SERVERCODE_IMAGE=$DOCKER_REGISTRY/$PROJECT/servercode:latest\" \\\\\n     --build-arg \"EAR_NAME=Curam\" .\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n      <Tab label=\"Other EARs\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <p>{`For additional SPM applications (e.g. Rest, CitizenPortal), make the following changes to the command:`}</p>\n            <ul>\n              <li parentName=\"ul\">{`the value of the `}<inlineCode parentName=\"li\">{`--tag`}</inlineCode>{` argument must be the application name in `}<em parentName=\"li\">{`lowercase`}</em></li>\n              <li parentName=\"ul\">{`the value of the `}<inlineCode parentName=\"li\">{`--build-arg EAR_NAME`}</inlineCode>{` argument must be the name of the EAR file `}<em parentName=\"li\">{`without`}</em>{` the file extension (that is, for `}<inlineCode parentName=\"li\">{`Rest.ear`}</inlineCode>{`, use the value `}<inlineCode parentName=\"li\">{`Rest`}</inlineCode>{`)`}</li>\n            </ul>\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`docker build \\\\\n     --tag $DOCKER_REGISTRY/$PROJECT/rest:latest \\\\\n     --file ClientEAR.Dockerfile \\\\\n     --build-arg \"SERVERCODE_IMAGE=$DOCKER_REGISTRY/$PROJECT/servercode:latest\" \\\\\n     --build-arg \"EAR_NAME=Rest\" .\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n    </Tabs>\n    <ul>\n      <li parentName=\"ul\">{`To build the static content image, run the following commands:`}</li>\n    </ul>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"Using RedHat Registry\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`cd $SPM_HOME/dockerfiles/HTTPServer/\ndocker build \\\\\n     --tag $DOCKER_REGISTRY/$PROJECT/httpd:latest \\\\\n     --file StaticContent.Dockerfile \\\\\n     --build-arg \"BASE_REGISTRY=registry.redhat.io/\" \\\\\n     --build-arg \"CONTENT_DIR=/CuramStatic\" .\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n      <Tab label=\"Unauthenticated / Local image\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`cd $SPM_HOME/dockerfiles/HTTPServer/\ndocker build \\\\\n     --tag $DOCKER_REGISTRY/$PROJECT/httpd:latest \\\\\n     --file StaticContent.Dockerfile \\\\\n     --build-arg \"CONTENT_DIR=/CuramStatic\" .\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n    </Tabs>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` The `}<inlineCode parentName=\"p\">{`CONTENT_DIR`}</inlineCode>{` build argument must correspond to the value set in `}<inlineCode parentName=\"p\">{`curam-config.xml`}</inlineCode>{` when the webclient was built.`}</p>\n    </InlineNotification>\n    <ul>\n      <li parentName=\"ul\">{`To build an SPM Docker image for your `}<em parentName=\"li\">{`built`}</em>{` Universal Access application:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Copy the `}<inlineCode parentName=\"li\">{`build`}</inlineCode>{` directory from the React application to `}<inlineCode parentName=\"li\">{`$SPM_HOME/dockerfiles/HTTPServer`}</inlineCode></li>\n          <li parentName=\"ul\">{`Run the following commands:`}</li>\n        </ul>\n      </li>\n    </ul>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`This is applicable only if you are licensed for `}<a parentName=\"p\" {...{\n          \"href\": \"https://www.ibm.com/docs/en/spm/8.0.0?topic=universal-access\"\n        }}>{`Universal Access`}</a></p>\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` The `}<inlineCode parentName=\"p\">{`CONTENT_DIR`}</inlineCode>{` build argument must correspond to the value of the `}<inlineCode parentName=\"p\">{`PUBLIC_URL`}</inlineCode>{` variable set when creating the production build of the React app (`}<inlineCode parentName=\"p\">{`npm run build`}</inlineCode>{`).`}</p>\n    </InlineNotification>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"Using RedHat Registry\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`cd $SPM_HOME/dockerfiles/HTTPServer/\ndocker build \\\\\n     --tag $DOCKER_REGISTRY/$PROJECT/uawebapp:latest \\\\\n     --file UAWebApp.Dockerfile \\\\\n     --build-arg \"BASE_REGISTRY=registry.redhat.io/\" \\\\\n     --build-arg \"CONTENT_DIR=/universal\" .\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n      <Tab label=\"Unauthenticated / Local image\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`cd $SPM_HOME/dockerfiles/HTTPServer/\ndocker build \\\\\n     --tag $DOCKER_REGISTRY/$PROJECT/uawebapp:latest \\\\\n     --file UAWebApp.Dockerfile \\\\\n     --build-arg \"CONTENT_DIR=/universal\" .\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n    </Tabs>\n    <h2>{`Pushing the images to the registry`}</h2>\n    <p>{`When you set up Minikube by following the steps in `}<a parentName=\"p\" {...{\n        \"href\": \"/spm-kubernetes/prereq/kubernetes/minikube\"\n      }}>{`Minikube`}</a>{`, a registry was also created to store the Docker images.\nTo push the new images that you created to the registry, run the following shell script:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`docker push $DOCKER_REGISTRY/$PROJECT/xmlserver:latest\ndocker push $DOCKER_REGISTRY/$PROJECT/utilities:latest\ndocker push $DOCKER_REGISTRY/$PROJECT/batch:latest\ndocker push $DOCKER_REGISTRY/$PROJECT/servercode:latest\ndocker push $DOCKER_REGISTRY/$PROJECT/curam:latest\ndocker push $DOCKER_REGISTRY/$PROJECT/httpd:latest\n`}</code></pre>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`If any additional images were built (for other SPM applications or for the React application), do not forget to push the images too. For example:`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-shell\"\n        }}>{`docker push $DOCKER_REGISTRY/$PROJECT/rest:latest\ndocker push $DOCKER_REGISTRY/$PROJECT/uawebapp:latest\n`}</code></pre>\n    </InlineNotification>\n    <h2>{`Pushing the images to the IBM Cloud Container Registry`}</h2>\n    <p>{`IBM Cloud Container Registry is the service to distribute the containers across Kubernetes clusters. In order to configure it, some preparation steps are\nrequired to obtain the credentials and a namespace, globally unique between all the tenants of IBM Cloud.\nRefer to `}<a parentName=\"p\" {...{\n        \"href\": \"https://cloud.ibm.com/docs/Registry?topic=Registry-getting-started\"\n      }}>{`Getting started with IBM Cloud Container Registry`}</a>{` for more information on configuring the registry and obtaining the required credentials.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`ibmcloud login -c <ICR_ENDPOINT> --apikey <ICR_API_KEY> -r <ICR_DC_REGION>\nibmcloud cr login\n\ndocker push us.icr.io/<ICR_NAMESPACE>/xmlserver:latest\ndocker push us.icr.io/<ICR_NAMESPACE>/utilities:latest\ndocker push us.icr.io/<ICR_NAMESPACE>/batch:latest\ndocker push us.icr.io/<ICR_NAMESPACE>/curam:latest\ndocker push us.icr.io/<ICR_NAMESPACE>/httpd:latest\n`}</code></pre>\n    <h2>{`View the artifacts in the repository`}</h2>\n    <p>{`Confirm that the pushes to the Docker registry succeeded. Run the following command:`}</p>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"Minikube\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`curl http://$DOCKER_REGISTRY/v2/_catalog\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n      <Tab label=\"CRC\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`curl -k -ukubeadmin:$(oc whoami -t) https://$(oc registry info --public)/v2/_catalog\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n    </Tabs>\n    <p>{`The command returns the following result:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\"repositories\":[\"batch\",\"curam\",\"xmlserver\",\"httpd\",\"utilities\"]}\n`}</code></pre>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` Due to an issue with `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/kubernetes/minikube/issues/2365\"\n        }}>{`Minikube`}</a>{` you will need to repush the Docker images to the registry\neach time you shut down.`}</p>\n    </InlineNotification>\n    <p>{`For more information about the Docker Registry HTTP API, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.docker.com/registry/spec/api/\"\n      }}>{`Docker Registry HTTP API V2`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--379mx\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--2QE1Z\";\nexport var pageHeader = \"PageHeader-module--page-header--1JmOE\";\nexport var darkMode = \"PageHeader-module--dark-mode--aV7If\";\nexport var withTabs = \"PageHeader-module--with-tabs--ezlJE\";\nexport var text = \"PageHeader-module--text--J1--B\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--27F-D\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--2eTgE\";\nexport var link = \"EditLink-module--link--t_pLX\";\nexport var row = \"EditLink-module--row--2vJiZ\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--36NdM\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--3IxF7\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--18QsR\";\nexport var list = \"PageTabs-module--list--3gLeN\";\nexport var listItem = \"PageTabs-module--list-item--2X02I\";\nexport var link = \"PageTabs-module--link--2anNu\";\nexport var selectedItem = \"PageTabs-module--selected-item--3CjGa\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--3sLO2\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--3gAON\";\nexport var text = \"last-modified-date-module--text--1RmBx\";\nexport var row = \"last-modified-date-module--row--Bb0E9\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"names":["_frontmatter","makeShortcode","name","props","console","warn","InlineNotification","Tabs","Tab","Row","Column","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","label","isMDXComponent","title","theme","tabs","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","Main","padded","NextPrevious","Utils"],"sourceRoot":""}