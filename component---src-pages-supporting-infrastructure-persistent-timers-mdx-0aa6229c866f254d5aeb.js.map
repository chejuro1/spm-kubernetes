{"version":3,"file":"component---src-pages-supporting-infrastructure-persistent-timers-mdx-0aa6229c866f254d5aeb.js","mappings":"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","sources":["webpack://spm-kubernetes/./src/pages/supporting-infrastructure/persistent-timers.mdx","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://spm-kubernetes/./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/spm-kubernetes/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Tabs = makeShortcode(\"Tabs\");\nconst Tab = makeShortcode(\"Tab\");\nconst Row = makeShortcode(\"Row\");\nconst Column = makeShortcode(\"Column\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2><img parentName=\"h2\" {...{\n        \"src\": \"https://img.shields.io/badge/-SPM_8.0.0.0-green\",\n        \"alt\": \"SPM 8.0.0.0\"\n      }}></img>{` Support for Liberty persistent timers`}</h2>\n    <p>{`Liberty persistent timers are configured by default to support the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.ibm.com/docs/en/spm/8.0.0?topic=behavior-cram-timer\"\n      }}>{`SPM timer infrastructure`}</a>{`.\nThis configuration takes advantage of the Liberty capability, provided by release 20.0.0.1, to share a set of timer database tables across Liberty servers, which in our case run in Kubernetes pods.`}</p>\n    <p>{`Sharing database timer tables avoids the issue where automatic creation of timer tables that occurs at each and every server/pod start could pose a database limit risk.\nConsider a typical SPM deployment of Curam, Rest, CitizenPortal, and Web Service applications with consumer and producer pods and three replicas.\nOn initial start that deployment would create 72 database tables.\nItâ€™s not hard to imagine the many hundreds or thousands of tables that could be created over time as replicas are scaled up, pods restarted, and so forth.`}</p>\n    <p>{`The sharing of timer tables immediately reduces the number of timer tables required to a much more manageable number and, more importantly, keeps the number of tables bounded. This is achieved by grouping deployments into pod types.\nFor instance, one set of timer tables for all `}<inlineCode parentName=\"p\">{`apps-curam-producer`}</inlineCode>{` pods (one pod type), similarly for all `}<inlineCode parentName=\"p\">{`apps-curam-consumer`}</inlineCode>{` pods (another pod type), for all `}<inlineCode parentName=\"p\">{`apps-rest-producer`}</inlineCode>{` pods (another pod type), and so forth.\nThus, based on one set of tables per pod type the above example deployment requiring 72 tables is now fixed at 24 tables, regardless of how many replicas are started.\nThe pod type is derived at deployment time and exposed as an environment variable, which is read by the Liberty configuration: `}<inlineCode parentName=\"p\">{`\\${env.POD_TIMER_TYPE}`}</inlineCode>{`.`}</p>\n    <p>{`The out-of-the-box configuration of Liberty persistent timers should be adequate for most use cases.\nHowever, Helm chart overrides are available for the most relevant Liberty settings that can be used to adjust behavior or performance depending upon your application, environment, etc.\nFor more information see the `}<a parentName=\"p\" {...{\n        \"href\": \"/spm-kubernetes/deployment/config-reference#liberty-runtime\"\n      }}>{`Configuration Reference`}</a>{` and the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.ibm.com/docs/en/was-liberty/base?topic=applications-configuring-enterprise-javabeans-timer-service-persistent-timers\"\n      }}>{`WebSphere Liberty documentation`}</a>{`.`}</p>\n    <h3>{`Migrating from SPM V7 to V8`}</h3>\n    <p>{`If you are migrating to SPM V8 you may cleanup the obsolete timer tables in your database.\nTo do this you need to be aware of how the timer tables were named previously.`}<br parentName=\"p\"></br>{`\n`}{`Being created uniquely for each pod means that the tables were named based on the pod name.\nThat is, the table names included the replicaset unique identifier (UUID), which is no longer used.\nFor example, a pod named `}<inlineCode parentName=\"p\">{`release-apps-curam-producer-76c8464b4d-9tzlx`}</inlineCode>{` would have mapped to a table name of  `}<inlineCode parentName=\"p\">{`EJBTIMER_RELEASE_APPS_CURAM_CONSUMER_76C8464B4D_9TZLX_PART`}</inlineCode>{`, which now maps to `}<inlineCode parentName=\"p\">{`EJBTIMER_RELEASE_APPS_CURAM_CONSUMER_PART`}</inlineCode>{`, etc.`}</p>\n    <p>{`Since the old naming is no longer used those timer tables are obsolete once you migrate to SPM V8 and the tables can safefly be removed.\nIn cleaning up obsolete tables you need to be careful to only identify obsolete tables.\nThe following SQL will generate `}<inlineCode parentName=\"p\">{`DROP`}</inlineCode>{` DDL statements that map specifically to the old table naming:`}</p>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"Db2\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`select concat('drop table ',strip(tabname)) from syscat.tables where tabname like 'EJBTIMER_%_APPS_%_%_%_%'\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n      <Tab label=\"Db2 for z/OS\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`select concat('drop table ',strip(name))  || ';' from sysibm.systables where name like 'EJBTIMER_%_APPS_%_%_%_%';\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n      <Tab label=\"Oracle\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\"\n              }}>{`select 'DROP TABLE ' || OWNER || '.' || TABLE_NAME || ';' from SYS.ALL_TABLES  where TABLE_NAME LIKE 'EJBTIMER_%_APPS_%_%_%_%';\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n    </Tabs>\n    <p>{`Before executing the `}<inlineCode parentName=\"p\">{`DROP`}</inlineCode>{` statements ensure that none of the pods identified by the table names are running.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--379mx\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--2QE1Z\";\nexport var pageHeader = \"PageHeader-module--page-header--1JmOE\";\nexport var darkMode = \"PageHeader-module--dark-mode--aV7If\";\nexport var withTabs = \"PageHeader-module--with-tabs--ezlJE\";\nexport var text = \"PageHeader-module--text--J1--B\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--27F-D\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--2eTgE\";\nexport var link = \"EditLink-module--link--t_pLX\";\nexport var row = \"EditLink-module--row--2vJiZ\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--36NdM\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--3IxF7\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--18QsR\";\nexport var list = \"PageTabs-module--list--3gLeN\";\nexport var listItem = \"PageTabs-module--list-item--2X02I\";\nexport var link = \"PageTabs-module--link--2anNu\";\nexport var selectedItem = \"PageTabs-module--selected-item--3CjGa\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--3sLO2\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--3gAON\";\nexport var text = \"last-modified-date-module--text--1RmBx\";\nexport var row = \"last-modified-date-module--row--Bb0E9\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Tabs","Tab","Row","Column","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","label","isMDXComponent","title","theme","tabs","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","Main","padded","NextPrevious","Utils"],"sourceRoot":""}